name: Build and Commit

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Get package version
        id: package-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Check for changes and commit
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "chore: update built files [skip ci]"
            git push
          fi

      - name: Check if tag exists
        id: check-tag
        run: |
          if ! git rev-parse "v${{ steps.package-version.outputs.version }}" >/dev/null 2>&1; then
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        if: steps.check-tag.outputs.tag_exists == 'false'
        run: |
          git tag -a "v${{ steps.package-version.outputs.version }}" -m "Release v${{ steps.package-version.outputs.version }}"
          git push origin "v${{ steps.package-version.outputs.version }}"